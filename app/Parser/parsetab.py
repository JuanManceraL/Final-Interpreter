
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CCURLB DIRECTIVES DIVIDE ELSE EQUALS EXP IDENTIFIER IF LIBRARIES LPAREN MINUS NS NUMBER OCURLB OP_BOOL PLUS PRINT RPAREN SEMIC SQR STRING TIMES TYPE VAL_BOOLprogram  : code\n                | code : code statement \n            | statementstatement    : declaration\n                    | assignment\n                    | prt\n                    | directives\n                    | ifstdirectives  : NS DIRECTIVES LIBRARIESdeclaration  : TYPE IDENTIFIER SEMIC\n                    | TYPE IDENTIFIER EQUALS expression SEMICassignment   : IDENTIFIER EQUALS expression SEMICprt  : PRINT LPAREN expression RPAREN SEMIC\n            | PRINT LPAREN STRING RPAREN SEMICifst : IF LPAREN valbool RPAREN OCURLB program CCURLB\n            | IF LPAREN valbool RPAREN OCURLB program CCURLB ELSE OCURLB program CCURLBexpression   : expression PLUS termexpression   : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorfactor : EXP LPAREN factor value RPARENfactor : SQR LPAREN factor RPARENvalue   : NUMBER valbool     : VAL_BOOL\n                    | expression OP_BOOL expressionexpression   : termterm : factorfactor   : value\n                | IDENTIFIER\n                | LPAREN expression RPAREN\n                | MINUS factor'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,14,20,34,39,52,60,61,68,72,],[-2,0,-1,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-15,-16,-17,]),'TYPE':([0,2,3,4,5,6,7,8,14,20,34,39,52,60,61,62,68,70,72,],[9,9,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-15,9,-16,9,-17,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,14,16,17,19,20,21,25,28,34,39,40,41,42,43,45,47,51,52,60,61,62,68,70,72,],[10,10,-4,-5,-6,-7,-8,-9,15,-3,22,22,22,-11,22,22,22,-10,-13,22,22,22,22,22,22,22,-12,-14,-15,10,-16,10,-17,]),'PRINT':([0,2,3,4,5,6,7,8,14,20,34,39,52,60,61,62,68,70,72,],[11,11,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-15,11,-16,11,-17,]),'NS':([0,2,3,4,5,6,7,8,14,20,34,39,52,60,61,62,68,70,72,],[12,12,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-15,12,-16,12,-17,]),'IF':([0,2,3,4,5,6,7,8,14,20,34,39,52,60,61,62,68,70,72,],[13,13,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-15,13,-16,13,-17,]),'CCURLB':([2,3,4,5,6,7,8,14,20,34,39,52,60,61,62,66,68,70,71,72,],[-1,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-15,-2,68,-16,-2,72,-17,]),'EQUALS':([10,15,],[16,21,]),'LPAREN':([11,13,16,17,19,21,25,27,28,30,40,41,42,43,45,47,51,],[17,19,28,28,28,28,28,45,28,47,28,28,28,28,28,28,28,]),'DIRECTIVES':([12,],[18,]),'SEMIC':([15,22,23,24,26,29,31,38,44,48,49,53,54,55,56,58,65,67,],[20,-30,39,-27,-28,-29,-24,52,-32,60,61,-18,-19,-20,-21,-31,-23,-22,]),'EXP':([16,17,19,21,25,28,40,41,42,43,45,47,51,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'SQR':([16,17,19,21,25,28,40,41,42,43,45,47,51,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'MINUS':([16,17,19,21,22,23,24,25,26,28,29,31,32,37,38,40,41,42,43,44,45,46,47,51,53,54,55,56,58,63,65,67,],[25,25,25,25,-30,41,-27,25,-28,25,-29,-24,41,41,41,25,25,25,25,-32,25,41,25,25,-18,-19,-20,-21,-31,41,-23,-22,]),'NUMBER':([16,17,19,21,22,25,28,29,31,40,41,42,43,44,45,47,51,57,58,65,67,],[31,31,31,31,-30,31,31,-29,-24,31,31,31,31,-32,31,31,31,31,-31,-23,-22,]),'STRING':([17,],[33,]),'LIBRARIES':([18,],[34,]),'VAL_BOOL':([19,],[36,]),'TIMES':([22,24,26,29,31,44,53,54,55,56,58,65,67,],[-30,42,-28,-29,-24,-32,42,42,-20,-21,-31,-23,-22,]),'DIVIDE':([22,24,26,29,31,44,53,54,55,56,58,65,67,],[-30,43,-28,-29,-24,-32,43,43,-20,-21,-31,-23,-22,]),'PLUS':([22,23,24,26,29,31,32,37,38,44,46,53,54,55,56,58,63,65,67,],[-30,40,-27,-28,-29,-24,40,40,40,-32,40,-18,-19,-20,-21,-31,40,-23,-22,]),'RPAREN':([22,24,26,29,31,32,33,35,36,44,46,53,54,55,56,58,59,63,64,65,67,],[-30,-27,-28,-29,-24,48,49,50,-25,-32,58,-18,-19,-20,-21,-31,65,-26,67,-23,-22,]),'OP_BOOL':([22,24,26,29,31,37,44,53,54,55,56,58,65,67,],[-30,-27,-28,-29,-24,51,-32,-18,-19,-20,-21,-31,-23,-22,]),'OCURLB':([50,69,],[62,70,]),'ELSE':([68,],[69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,62,70,],[1,66,71,]),'code':([0,62,70,],[2,2,2,]),'statement':([0,2,62,70,],[3,14,3,3,]),'declaration':([0,2,62,70,],[4,4,4,4,]),'assignment':([0,2,62,70,],[5,5,5,5,]),'prt':([0,2,62,70,],[6,6,6,6,]),'directives':([0,2,62,70,],[7,7,7,7,]),'ifst':([0,2,62,70,],[8,8,8,8,]),'expression':([16,17,19,21,28,51,],[23,32,37,38,46,63,]),'term':([16,17,19,21,28,40,41,51,],[24,24,24,24,24,53,54,24,]),'factor':([16,17,19,21,25,28,40,41,42,43,45,47,51,],[26,26,26,26,44,26,26,26,55,56,57,59,26,]),'value':([16,17,19,21,25,28,40,41,42,43,45,47,51,57,],[29,29,29,29,29,29,29,29,29,29,29,29,29,64,]),'valbool':([19,],[35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> code','program',1,'p_program','Syntax.py',35),
  ('program -> <empty>','program',0,'p_program','Syntax.py',36),
  ('code -> code statement','code',2,'p_code','Syntax.py',52),
  ('code -> statement','code',1,'p_code','Syntax.py',53),
  ('statement -> declaration','statement',1,'p_statement','Syntax.py',60),
  ('statement -> assignment','statement',1,'p_statement','Syntax.py',61),
  ('statement -> prt','statement',1,'p_statement','Syntax.py',62),
  ('statement -> directives','statement',1,'p_statement','Syntax.py',63),
  ('statement -> ifst','statement',1,'p_statement','Syntax.py',64),
  ('directives -> NS DIRECTIVES LIBRARIES','directives',3,'p_directives','Syntax.py',68),
  ('declaration -> TYPE IDENTIFIER SEMIC','declaration',3,'p_declaration','Syntax.py',73),
  ('declaration -> TYPE IDENTIFIER EQUALS expression SEMIC','declaration',5,'p_declaration','Syntax.py',74),
  ('assignment -> IDENTIFIER EQUALS expression SEMIC','assignment',4,'p_assignment','Syntax.py',129),
  ('prt -> PRINT LPAREN expression RPAREN SEMIC','prt',5,'p_print','Syntax.py',151),
  ('prt -> PRINT LPAREN STRING RPAREN SEMIC','prt',5,'p_print','Syntax.py',152),
  ('ifst -> IF LPAREN valbool RPAREN OCURLB program CCURLB','ifst',7,'p_if','Syntax.py',159),
  ('ifst -> IF LPAREN valbool RPAREN OCURLB program CCURLB ELSE OCURLB program CCURLB','ifst',11,'p_if','Syntax.py',160),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Syntax.py',170),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Syntax.py',181),
  ('term -> term TIMES factor','term',3,'p_term_times','Syntax.py',193),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Syntax.py',205),
  ('factor -> EXP LPAREN factor value RPAREN','factor',5,'p_factor_exp','Syntax.py',217),
  ('factor -> SQR LPAREN factor RPAREN','factor',4,'p_factor_sqr','Syntax.py',228),
  ('value -> NUMBER','value',1,'p_values_num','Syntax.py',239),
  ('valbool -> VAL_BOOL','valbool',1,'p_value_bool','Syntax.py',244),
  ('valbool -> expression OP_BOOL expression','valbool',3,'p_value_bool','Syntax.py',245),
  ('expression -> term','expression',1,'p_expression_term','Syntax.py',272),
  ('term -> factor','term',1,'p_term_factor','Syntax.py',277),
  ('factor -> value','factor',1,'p_factor_value','Syntax.py',282),
  ('factor -> IDENTIFIER','factor',1,'p_factor_value','Syntax.py',283),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_value','Syntax.py',284),
  ('factor -> MINUS factor','factor',2,'p_factor_value','Syntax.py',285),
]
