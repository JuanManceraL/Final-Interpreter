
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CCURLB DIRECTIVES DIVIDE ELSE EQUALS EXP IDENTIFIER IF LIBRARIES LPAREN MINUS NS NUMBER OCURLB OP_BOOL PLUS PRINT RPAREN SEMIC SQR TIMES TYPE VAL_BOOLprogram  : code\n                | code : code statement \n            | statementstatement    : declaration\n                    | assignment\n                    | prt\n                    | directives\n                    | ifstdirectives  : NS DIRECTIVES LIBRARIESdeclaration  : TYPE IDENTIFIER SEMIC\n                    | TYPE IDENTIFIER EQUALS expression SEMICassignment   : IDENTIFIER EQUALS expression SEMICprt  : PRINT LPAREN expression RPAREN SEMICifst : IF LPAREN valbool RPAREN OCURLB program CCURLB\n            | IF LPAREN valbool RPAREN OCURLB program CCURLB ELSE OCURLB program CCURLBexpression   : expression PLUS termexpression   : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorfactor : EXP LPAREN factor value RPARENfactor : SQR LPAREN factor RPARENvalue   : NUMBER valbool     : VAL_BOOL\n                    | expression OP_BOOL expressionexpression   : termterm : factorfactor   : value\n                | IDENTIFIER\n                | LPAREN expression RPAREN\n                | MINUS factor'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,14,20,33,38,50,58,65,69,],[-2,0,-1,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-15,-16,]),'TYPE':([0,2,3,4,5,6,7,8,14,20,33,38,50,58,59,65,67,69,],[9,9,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,9,-15,9,-16,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,14,16,17,19,20,21,25,28,33,38,39,40,41,42,44,46,49,50,58,59,65,67,69,],[10,10,-4,-5,-6,-7,-8,-9,15,-3,22,22,22,-11,22,22,22,-10,-13,22,22,22,22,22,22,22,-12,-14,10,-15,10,-16,]),'PRINT':([0,2,3,4,5,6,7,8,14,20,33,38,50,58,59,65,67,69,],[11,11,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,11,-15,11,-16,]),'NS':([0,2,3,4,5,6,7,8,14,20,33,38,50,58,59,65,67,69,],[12,12,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,12,-15,12,-16,]),'IF':([0,2,3,4,5,6,7,8,14,20,33,38,50,58,59,65,67,69,],[13,13,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,13,-15,13,-16,]),'CCURLB':([2,3,4,5,6,7,8,14,20,33,38,50,58,59,63,65,67,68,69,],[-1,-4,-5,-6,-7,-8,-9,-3,-11,-10,-13,-12,-14,-2,65,-15,-2,69,-16,]),'EQUALS':([10,15,],[16,21,]),'LPAREN':([11,13,16,17,19,21,25,27,28,30,39,40,41,42,44,46,49,],[17,19,28,28,28,28,28,44,28,46,28,28,28,28,28,28,28,]),'DIRECTIVES':([12,],[18,]),'SEMIC':([15,22,23,24,26,29,31,37,43,47,51,52,53,54,56,62,64,],[20,-29,38,-26,-27,-28,-23,50,-31,58,-17,-18,-19,-20,-30,-22,-21,]),'EXP':([16,17,19,21,25,28,39,40,41,42,44,46,49,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'SQR':([16,17,19,21,25,28,39,40,41,42,44,46,49,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'MINUS':([16,17,19,21,22,23,24,25,26,28,29,31,32,36,37,39,40,41,42,43,44,45,46,49,51,52,53,54,56,60,62,64,],[25,25,25,25,-29,40,-26,25,-27,25,-28,-23,40,40,40,25,25,25,25,-31,25,40,25,25,-17,-18,-19,-20,-30,40,-22,-21,]),'NUMBER':([16,17,19,21,22,25,28,29,31,39,40,41,42,43,44,46,49,55,56,62,64,],[31,31,31,31,-29,31,31,-28,-23,31,31,31,31,-31,31,31,31,31,-30,-22,-21,]),'LIBRARIES':([18,],[33,]),'VAL_BOOL':([19,],[35,]),'TIMES':([22,24,26,29,31,43,51,52,53,54,56,62,64,],[-29,41,-27,-28,-23,-31,41,41,-19,-20,-30,-22,-21,]),'DIVIDE':([22,24,26,29,31,43,51,52,53,54,56,62,64,],[-29,42,-27,-28,-23,-31,42,42,-19,-20,-30,-22,-21,]),'PLUS':([22,23,24,26,29,31,32,36,37,43,45,51,52,53,54,56,60,62,64,],[-29,39,-26,-27,-28,-23,39,39,39,-31,39,-17,-18,-19,-20,-30,39,-22,-21,]),'RPAREN':([22,24,26,29,31,32,34,35,43,45,51,52,53,54,56,57,60,61,62,64,],[-29,-26,-27,-28,-23,47,48,-24,-31,56,-17,-18,-19,-20,-30,62,-25,64,-22,-21,]),'OP_BOOL':([22,24,26,29,31,36,43,51,52,53,54,56,62,64,],[-29,-26,-27,-28,-23,49,-31,-17,-18,-19,-20,-30,-22,-21,]),'OCURLB':([48,66,],[59,67,]),'ELSE':([65,],[66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,59,67,],[1,63,68,]),'code':([0,59,67,],[2,2,2,]),'statement':([0,2,59,67,],[3,14,3,3,]),'declaration':([0,2,59,67,],[4,4,4,4,]),'assignment':([0,2,59,67,],[5,5,5,5,]),'prt':([0,2,59,67,],[6,6,6,6,]),'directives':([0,2,59,67,],[7,7,7,7,]),'ifst':([0,2,59,67,],[8,8,8,8,]),'expression':([16,17,19,21,28,49,],[23,32,36,37,45,60,]),'term':([16,17,19,21,28,39,40,49,],[24,24,24,24,24,51,52,24,]),'factor':([16,17,19,21,25,28,39,40,41,42,44,46,49,],[26,26,26,26,43,26,26,26,53,54,55,57,26,]),'value':([16,17,19,21,25,28,39,40,41,42,44,46,49,55,],[29,29,29,29,29,29,29,29,29,29,29,29,29,61,]),'valbool':([19,],[34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> code','program',1,'p_program','Syntax.py',31),
  ('program -> <empty>','program',0,'p_program','Syntax.py',32),
  ('code -> code statement','code',2,'p_code','Syntax.py',38),
  ('code -> statement','code',1,'p_code','Syntax.py',39),
  ('statement -> declaration','statement',1,'p_statement','Syntax.py',46),
  ('statement -> assignment','statement',1,'p_statement','Syntax.py',47),
  ('statement -> prt','statement',1,'p_statement','Syntax.py',48),
  ('statement -> directives','statement',1,'p_statement','Syntax.py',49),
  ('statement -> ifst','statement',1,'p_statement','Syntax.py',50),
  ('directives -> NS DIRECTIVES LIBRARIES','directives',3,'p_directives','Syntax.py',54),
  ('declaration -> TYPE IDENTIFIER SEMIC','declaration',3,'p_declaration','Syntax.py',59),
  ('declaration -> TYPE IDENTIFIER EQUALS expression SEMIC','declaration',5,'p_declaration','Syntax.py',60),
  ('assignment -> IDENTIFIER EQUALS expression SEMIC','assignment',4,'p_assignment','Syntax.py',95),
  ('prt -> PRINT LPAREN expression RPAREN SEMIC','prt',5,'p_print','Syntax.py',118),
  ('ifst -> IF LPAREN valbool RPAREN OCURLB program CCURLB','ifst',7,'p_if','Syntax.py',124),
  ('ifst -> IF LPAREN valbool RPAREN OCURLB program CCURLB ELSE OCURLB program CCURLB','ifst',11,'p_if','Syntax.py',125),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Syntax.py',132),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Syntax.py',141),
  ('term -> term TIMES factor','term',3,'p_term_times','Syntax.py',151),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Syntax.py',161),
  ('factor -> EXP LPAREN factor value RPAREN','factor',5,'p_factor_exp','Syntax.py',170),
  ('factor -> SQR LPAREN factor RPAREN','factor',4,'p_factor_sqr','Syntax.py',181),
  ('value -> NUMBER','value',1,'p_values_num','Syntax.py',192),
  ('valbool -> VAL_BOOL','valbool',1,'p_value_bool','Syntax.py',197),
  ('valbool -> expression OP_BOOL expression','valbool',3,'p_value_bool','Syntax.py',198),
  ('expression -> term','expression',1,'p_expression_term','Syntax.py',227),
  ('term -> factor','term',1,'p_term_factor','Syntax.py',232),
  ('factor -> value','factor',1,'p_factor_value','Syntax.py',237),
  ('factor -> IDENTIFIER','factor',1,'p_factor_value','Syntax.py',238),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_value','Syntax.py',239),
  ('factor -> MINUS factor','factor',2,'p_factor_value','Syntax.py',240),
]
